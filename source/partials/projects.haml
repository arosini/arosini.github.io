%section.container-fluid
  .section-title Projects

  #deals.project
    .col-xs-1.equal-height-column
    .col-xs-3.project-image= link_to_blank image_tag("images/spring.png"), "https://spring.io/"
    .col-xs-7.project-text
      .project-title Food Deal Finder / Reporter
      .project-description
        This application is a Spring Boot app that contain CRUD functionality for "deals" that belong to an organization and set of locations. I got the idea because keeping track of all the Taco Tuesdays around Boston became cumbersome.
        So while I started building this application primarily as sandbox to try out features of Spring Boot, Spring Data, JPA, MySQL, Maven, Lombok and JUnit, as I built it I started to like the idea of actually productizing it more and more.
        %br
        %br  
        The application showcases how easy it is to implement simple microservices with Spring Boot.
        It contains what I consider to be best practice in terms of separating out a controller layer from the service and persistence layers.
        Right now, its basically just a CRUD application, but I hope to add a permissions / user model, gamification, search, and a bunch of other features to it when I find the time. Also, branding.
        I would also like to use it to learn a diffferent cloud platform than AWS (perhaps Google) and build a front-end for it (I was thinking with Flutter).
        If you are interested in helping with that in your spare time, let me know! 
      .col-xs-12.project-links=link_to_blank image_tag("images/gitlab.png") +  " Source Code", "https://gitlab.com/adaros48/deals"
    .col-xs-1.equal-height-column

  %hr.col-xs-10.col-xs-offset-1

  #wildstyle-generator.project
    .col-xs-1.equal-height-column
    .col-xs-7.project-text
      .project-title Wildstyle Generator
      .project-description
        This Maven test library can be used to generate POJOs with randomized values during automated testing. I built it because I was frustrated there was nothing like FactoryGirl for the Java ecosystem. 
        %br
        %br
        The library is published to Maven central with version 0.1. I felt it needed a lot more functionality and testing before it deserved V1.0.
        The
        =link_to_blank "README", "https://github.com/arosini/wildstyle-generator"
        in the repository is actually pretty good at showcasing what it can do.
        I also use this as an example of how
        =link_to_blank "Design By Contract", "https://en.wikipedia.org/wiki/Design_by_contract"
        code and contracts look.
      .col-xs-12.project-links
        .col-xs-6=link_to_blank image_tag("images/github.png") +  " Source Code", "https://github.com/arosini/wildstyle-generator"
        .col-xs-6=link_to_blank image_tag("images/maven.png") +  " Maven Central Repository", "https://central.sonatype.com/artifact/com.github.arosini/wildstyle-generator/0.1"
    .col-xs-3.project-image= link_to_blank image_tag("images/maven-large.png"), "https://maven.apache.org"
    .col-xs-1.equal-height-column

  %hr.col-xs-10.col-xs-offset-1

  #this-website.project
    .col-xs-1.equal-height-column
    .col-xs-3.project-image= link_to_blank image_tag("images/middleman.png"), "https://middlemanapp.com/"
    .col-xs-7.col-xs-offset-1.project-text
      .project-title This Website
      .project-description
        I built this website using Middleman, HAML, SASS, CoffeeScript, and GitHub Pages.
        %br
        %br
        This website is meant to serve the same purpose as a resume, except implemented as a website. I think basic HTML/CSS/JS should be a part of a developers toolkit, and this gives me a way of doing some of that every so often as a backend focused engineer.
        I tried to design the website in a more modern style with horizontal sections that would lead the reader through in an easy-to-read way.
        Design has never been my strong point and I would certainly appreciate any input you had to offer in terms of the design and UX of this website!
      .col-xs-12.project-links=link_to_blank image_tag("images/github.png") +  " Source Code", "https://github.com/arosini/arosini.github.io"
    .col-xs-1.equal-height-column

  %hr.col-xs-10.col-xs-offset-1

  #lineup-generator.project
    .col-xs-1.equal-height-column
    .col-xs-7.project-text
      .project-title Fantasy Sports Lineup Generator
      .project-description
        This project is a simple Java application that can generate lineups for daily fantasy sports contests.
        When I first got into daily fantasy sports, all I could think about was how lineup generation was a search optimization problem.
        So I built this just to scratch the itch of knowing if I could make something efficient enough to actually complete computation given the sheer number of permutations of a fantasy sports lineup.
        %br
        %br
        So far, all I have done is the easy part of this project.
        That is, setting up a harness to pull daily fantasy sports data from a chosen provider (DraftKings or FanDuel for example), and generating a lineup for a chosen contest that provider offers.
        The harder part is creating a good model for player value. Just as a proof of concept the algorithm can generate a lineup, I used the player's average fantasy points value which is included in the provider's data.
        That is not a particularly good predictor though, since it doesn't take into account injuries, hot streaks, opponents, etc... I am hoping to one day create an ML model for the predictions when I find the time (and ML is cheaper).
      .col-xs-12.project-links=link_to_blank image_tag("images/gitlab.png") +  " Source Code", "https://gitlab.com/adaros48/lineup-generator"
    .col-xs-3.project-image= link_to_blank image_tag("images/java.png"), "https://www.java.com/en/"
    .col-xs-1.equal-height-column
